<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Panel</title>
    <!-- Favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="img/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/img/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="img/favicon/favicon-16x16.png">

    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/css/style2.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        .sidebar {
            height: 100vh;
            position: fixed;
            top: 0;
            left: 0;
            width: 250px;
            background-color: #f8f9fa;
            padding-top: 20px;
            transition: all 0.3s;
            border-right: 1px solid #dee2e6;
            z-index: 1000;
            /* Ensure sidebar is above other content */
        }

        .sidebar .nav-link {
            color: #6c757d;
            padding: 10px 20px;
            font-size: 16px;
            display: flex;
            align-items: center;
            transition: all 0.3s;
        }

        .sidebar .nav-link i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }

        .sidebar .nav-link:hover {
            background-color: #e9ecef;
            color: #212529;
            text-decoration: none;
        }

        .sidebar .nav-link.active {
            background-color: #6f42c1;
            color: #fff;
            font-weight: bold;
        }

        .sidebar .sign-out:hover {
            background-color: #dc3545;
            color: #fff !important;
        }

        .main-content {
            margin-left: 250px;
            padding: 20px;
            transition: all 0.3s;
        }

        /* Hamburger Menu Styling */
        .navbar-toggler {
            display: none;
        }

        /* Open Sidebar Button Styling */
        .open-sidebar-btn {
            display: none;
            position: fixed;
            top: 10px;
            right: 10px;
            /* Moved to top-right corner */
            z-index: 999;
            /* Below the sidebar but above main content */
        }

        /* Close Sidebar Button Styling */
        .close-sidebar-btn {
            display: none;
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 1001;
            /* Above sidebar content */
        }

        .sidebar.active .close-sidebar-btn {
            display: block;
            /* Show close button when sidebar is open */
        }

        @media (max-width: 768px) {
            .sidebar {
                left: -250px;
            }

            .sidebar.active {
                left: 0;
            }

            .main-content {
                margin-left: 0;
            }

            .navbar-toggler {
                display: block;
                position: fixed;
                top: 10px;
                left: 10px;
                z-index: 1001;
                /* Ensure toggler is above sidebar */
            }

            .open-sidebar-btn {
                display: block;
            }

            .sidebar.active+.main-content .open-sidebar-btn {
                display: none;
                /* Hide the open button when sidebar is open */
            }
        }

        .table thead th {
            background-color: #000000;
            color: white;
            font-weight: 500;
            padding: 12px;
            border-right: 1px solid rgba(255, 255, 255, 0.2);
        }
    </style>

</head>

<body>
    <!-- Hamburger Menu for Mobile -->
    <button class="navbar-toggler" type="button" onclick="toggleSidebar()">
        <span class="navbar-toggler-icon"></span>
    </button>

    <!-- Sidebar -->
    <nav class="sidebar">
        <!-- Close Sidebar Button -->
        <button class="btn btn-dark close-sidebar-btn" onclick="toggleSidebar()">
            <i class="bi bi-x-lg"></i></button>

        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link " href="/admin/dashboard">
                    <i class="bi bi-house-door"></i> Dashboard
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/category">
                    <i class="bi bi-grid"></i> Categories
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/products">
                    <i class="bi bi-box"></i> Products
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/customers">
                    <i class="bi bi-people"></i> Customers
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/admin/orders">
                    <i class="bi bi-cart"></i> Orders
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <i class="bi bi-ticket"></i> Coupons
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <i class="bi bi-arrow-left-right"></i> Refund/Return
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    <i class="bi bi-bar-chart"></i> Sales Report
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link sign-out" href="/admin/logout">
                    <i class="bi bi-box-arrow-right"></i> Sign Out
                </a>
            </li>
        </ul>
    </nav>


    <!-- Sidebar + Main Content Wrapper -->
    <div class="container-fluid w-100 sidebar-header">
        <div class="row g-0">

            <!-- Main Content -->
            <main class="col-md-12 ms-sm-auto col-lg-9 px-md-2 py-4 mx-auto">
                <h1 class="h3 mb-4 fw-bold text-dark">Order Details Update</h1>
                <div class="row">
                    <!-- Order Summary -->
                    <div class="col-md-12">
                        <div class="card mb-4 border-0" style="border-radius: 15px; overflow: hidden;">
                            <div class="card-header text-white py-3">
                                <h5 class="card-title mb-0 fw-bold">Order - <%= order.orderId %>
                                </h5>
                            </div>
                            <div class="card-body p-4" style="background: #fff;">
                                <div class="row mb-3">
                                    <div class="">
                                        <% let subtotal=0; order.orderItems.forEach(item=> {
                                            if (item.individualStatus !== 'Cancelled') {
                                            subtotal += item.quantity * (item.basePrice || 0);
                                            }
                                            });
                                            let total = subtotal ;
                                            %>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <p class="mb-2"><strong class="text-muted">Order Date:</strong>
                                                    <%= new Date(order.createdAt).toLocaleDateString('en-GB') %>
                                                </p>
                                                <p class="fw-bold me-4">Grand Total : â‚¹ <%= total %>
                                                </p>
                                            </div>
                                            <p class="mb-2"><strong class="text-muted">Payment Method:</strong>
                                                <% let paymentLabel=order.paymentMethod; if (order.paymentMethod==='cod'
                                                    ) { paymentLabel='Cash on Delivery' ; } else if
                                                    (order.paymentMethod==='netbanking' ) { paymentLabel='Net Banking' ;
                                                    } else if (order.paymentMethod==='wallet' ) {
                                                    paymentLabel='FitBazar Wallet' ; } else if
                                                    (order.paymentMethod==='card' ) { paymentLabel='Credit/Debit Card' ;
                                                    } %>
                                                    <%= paymentLabel %>
                                            </p>

                                    </div>
                                </div>
                                <!-- Product Details Table -->
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr class="text-center">
                                                <th scope="col">Product Name</th>
                                                <th scope="col">Status</th>
                                                <th scope="col">Unit Price</th>
                                                <th scope="col">Qty</th>
                                                <th scope="col">Subtotal</th>
                                                <th scope="col">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody class="table-group-divider">
                                            <% order.orderItems.forEach((item)=> {
                                                const status = item.individualStatus?.toLowerCase();
                                                const statusClasses = {
                                                placed: 'status-badge status-placed',
                                                processing: 'status-badge status-processing',
                                                shipped: 'status-badge status-shipped',
                                                delivered: 'status-badge status-delivered',
                                                cancelled: 'status-badge status-cancelled',
                                                returned: 'status-badge status-returned',
                                                };
                                                const iconMap = {
                                                placed: 'fas fa-clock',
                                                processing: 'fas fa-cog',
                                                shipped: 'fas fa-truck',
                                                delivered: 'fas fa-check-circle',
                                                cancelled: 'fas fa-times-circle',
                                                returned: 'fas fa-undo',
                                                };
                                                const statusClass = statusClasses[status] || 'status-badge';
                                                const icon = iconMap[status] || '';
                                                const isCancelled = status === 'cancelled';

                                                const productId = item.product?._id?.toString();
                                                const refund = refundMap[productId];
                                                const isReturned = refund && refund.status === 'Requested';
                                                const isApproved = refund && refund.status === 'Approved';
                                                const isRejected = refund && refund.status === 'Rejected';%>
                                                <tr>
                                                    <td class="<%= isCancelled ? 'text-muted' : '' %> break-text">
                                                        <%= item.product?.name %>
                                                    </td>
                                                    <td class="text-center">
                                                        <% if (isApproved) { %>
                                                            <span class="status-badge status-returned">
                                                                <i class="fas fa-check-circle"></i> Refund Approved
                                                            </span>
                                                            <% } else if (isRejected) { %>
                                                                <span class="status-badge status-cancelled">
                                                                    <i class="fas fa-times-circle"></i> Refund Rejected
                                                                </span>
                                                                <% } else { %>
                                                                    <span class="<%= statusClass %>">
                                                                        <i class="<%= icon %>"></i>
                                                                        <%= item.individualStatus %>
                                                                    </span>
                                                                    <% } %>

                                                                        <% if (isReturned && !(isApproved ||
                                                                            isRejected)) { %>
                                                                            <button
                                                                                class="btn btn-sm ms-1 return-info-btn"
                                                                                data-bs-toggle="modal"
                                                                                data-bs-target="#returnInfoModal"
                                                                                data-product-name="<%= item.product?.name %>"
                                                                                data-reason="<%= refund?.reason %>"
                                                                                data-product-id="<%= item.product?._id %>"
                                                                                data-order-id="<%= order._id %>">
                                                                                <i
                                                                                    class="fa-solid fa-circle-info p-0 m-0"></i>
                                                                            </button>
                                                                            <% } %>
                                                    </td>


                                                    <td class="text-center">â‚¹<%= item.basePrice || 0 %>
                                                    </td>
                                                    <td class="text-center">
                                                        <%= item.quantity %>
                                                    </td>
                                                    <td class="text-center">
                                                        <% if (isCancelled || isReturned) { %>
                                                            <del>â‚¹<%= item.quantity * (item.basePrice || 0) %></del>
                                                            <% } else { %>
                                                                â‚¹<%= item.quantity * (item.basePrice || 0) %>
                                                                    <% } %>
                                                    </td>

                                                    <% const statusMap={ 
                                                        'Cancelled' : { label: 'Cancelled' ,class: 'text-danger' , disabled: true }, 
                                                        'Returned' : { label: 'Returned' , class: '' , disabled: true }, 
                                                        'Shipped' : { label: 'Shipped' , class: 'text-primary' , disabled: true}, 
                                                        'Rejected' : { label: 'Rejected' , class: 'text-danger' ,disabled: true }, 
                                                        'Out for Delivery' : { label: 'Out for Delivery' , class: '' , disabled: true}, 
                                                        'Delivered' : { label: 'Delivered' , class: 'text-success' ,disabled: true },
                                                        'Refund Requested':{ label:'Refund Requested', class:'text-grey', disabled:true} }; 
                                                        
                                                        const currentStatus=statusMap[item.individualStatus]; %>

                                                        <td class="text-center">
                                                            <% if (currentStatus) { %>
                                                                <button
                                                                    class="btn custom-outline-btn btn-sm update-btn <%= currentStatus.class %>"
                                                                    data-bs-toggle="modal"
                                                                    data-bs-target="#statusChangeModal"
                                                                    data-product-id="<%= item.product?._id %>"
                                                                    <%=currentStatus.disabled ? 'disabled' : '' %>>
                                                                    <%= currentStatus.label %>
                                                                </button>
                                                                <% } else { %>
                                                                    <button
                                                                        class="btn custom-outline-btn btn-sm update-btn"
                                                                        data-bs-toggle="modal"
                                                                        data-bs-target="#statusChangeModal"
                                                                        data-product-id="<%= item.product?._id %>">
                                                                        Update
                                                                    </button>
                                                                    <% } %>
                                                        </td>

                                                </tr>
                                                <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                                <% if (allShipped) { %>
                                    <div class="text-end my-3">
                                        <button class="btn btn-outline-primary btn-sm"
                                            onclick="updateAllOrderItems('<%= order._id %>', 'Out for Delivery')">
                                            Mark as Out for Delivery
                                        </button>
                                    </div>
                                    <% } else if (allOutForDelivery) { %>
                                        <div class="text-end my-3">
                                            <button class="btn btn-success btn-sm"
                                                onclick="updateAllOrderItems('<%= order._id %>', 'Delivered')">
                                                Mark as Delivered
                                            </button>
                                        </div>
                                        <% } %>

                            </div>
                        </div>
                        <div class="card mb-4 border-0" style="border-radius: 15px; overflow: hidden;">
                            <div class="card-header bg-gradient text-white py-3" style="background-color: #000000;">
                                <h5 class="card-title mb-0 fw-bold">Shipping Address</h5>
                            </div>
                            <div class="card-body p-4" style="background: #fff;">
                                <div class="row">
                                    <div class="mt-2">
                                        <p class="mb-1 text-muted fw-bold">
                                            <%= address.name %>
                                                <%= address.phone %>
                                        </p>
                                        <p class="mb-1 text-muted">
                                            <%= address.addressLine1 %>
                                                <% if (address.addressLine2) { %>
                                                    , <%= address.addressLine2 %>
                                                        <% } %>
                                                            <% if (address.landmark) { %>
                                                                , <%= address.landmark %>
                                                                    <% } %>
                                                                        , <%= address.city %>, <%= address.state %>, <%=
                                                                                    address.pincode %>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Status Change Modal -->
    <div class="modal fade" id="statusChangeModal" tabindex="-1" aria-labelledby="statusChangeModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header py-2" style="background-color: #5a5a5a; color: white;">
                    <h5 class="modal-title" id="statusChangeModalLabel">Change Order Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="statusOrderId" value="<%= order._id %>">
                    <div class="mb-3">
                        <label for="orderStatus" class="form-label fw-bold">Select Status</label>
                        <select class="form-select" id="orderStatus" required>
                            <option value="" selected disabled>Select a status</option>

                            <option value="Shipped">Shipped</option>
                            <option value="Cancelled">Cancel</option>
                        </select>
                        <div class="invalid-feedback">Please select a status.</div>
                    </div>
                    <div class="mb-3" id="cancelReasonContainer" style="display: none;">
                        <label for="cancelReason" class="form-label fw-bold">Reason for Cancellation</label>
                        <select class="form-select" id="cancelReason">
                            <option value="" selected disabled>Select a reason</option>
                            <option value="Product Damaged">Product Damaged</option>
                            <option value="Customer not responding">Customer not responding</option>
                            <option value="Shipping delay">Shipping delay</option>
                            <option value="Other">Other</option>
                        </select>
                        <div class="invalid-feedback">Please select a reason for cancellation.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn custom-btn" onclick="submitStatusChange()">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="returnInfoModal" tabindex="-1" aria-labelledby="returnInfoModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-secondary text-white">
                    <h5 class="modal-title" id="returnInfoModalLabel">Return Request Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h6 class="fw-bold">Product:</h6>
                    <p id="returnProductName" class="text-muted"></p>
                    <h6 class="fw-bold">Reason:</h6>
                    <p id="returnReason" class="text-muted"></p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-success" id="approveReturnBtn">Approve</button>
                    <button class="btn btn-danger" id="rejectReturnBtn">Reject</button>
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function toggleCancelReason() {
            const status = document.getElementById('orderStatus').value;
            const cancelReasonContainer = document.getElementById('cancelReasonContainer');
            if (status === 'Cancelled') {
                cancelReasonContainer.style.display = 'block';
            } else {
                cancelReasonContainer.style.display = 'none';
                document.getElementById('cancelReason').value = '';
            }
        }

        let selectedProductId = null;

        document.querySelectorAll('.update-btn').forEach(button => {
            button.addEventListener('click', () => {
                selectedProductId = button.getAttribute('data-product-id');
            });
        });

        async function submitStatusChange() {
            const orderId = document.getElementById('statusOrderId').value;
            const status = document.getElementById('orderStatus').value;
            const cancelReason = document.getElementById('cancelReason').value;

            if (!status) {
                document.getElementById('orderStatus').classList.add('is-invalid');
                return;
            } else {
                document.getElementById('orderStatus').classList.remove('is-invalid');
            }

            if (status === 'Cancelled' && !cancelReason) {
                document.getElementById('cancelReason').classList.add('is-invalid');
                return;
            } else {
                document.getElementById('cancelReason').classList.remove('is-invalid');
            }

            const modal = bootstrap.Modal.getInstance(document.getElementById('statusChangeModal'));
            modal.hide();

            await updateOrderStatus(orderId, status, cancelReason);
        }

        async function updateOrderStatus(orderId, newStatus, reason = null) {
            try {
                const body = { productId: selectedProductId, status: newStatus };
                if (reason) body.cancelReason = reason;

                const response = await fetch(`/admin/orders?id=${orderId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body)
                });

                const data = await response.json();

                if (response.ok) {
                    Swal.fire({
                        text: data.message,
                        icon: "success",
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload(true);
                    });
                } else {
                    Swal.fire({
                        text: data.message || 'Failed to update status',
                        icon: "error",
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            } catch (error) {
                console.error('Error updating status:', error);
                Swal.fire({
                    text: 'An error occurred while updating the status',
                    icon: "error",
                    timer: 2000,
                    showConfirmButton: false
                });
            }
        }

        async function updateAllOrderItems(orderId, status) {
            try {
                const response = await fetch(`/admin/orders/all-status?id=${orderId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ status })
                });

                const data = await response.json();

                if (response.ok) {
                    Swal.fire({
                        text: data.message,
                        icon: "success",
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        text: data.message || 'Failed to update status',
                        icon: "error",
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            } catch (error) {
                console.error('Bulk update failed:', error);
                Swal.fire({
                    text: 'Something went wrong',
                    icon: "error",
                    timer: 2000,
                    showConfirmButton: false
                });
            }
        }

        // Add event listener for status change
        document.getElementById('orderStatus').addEventListener('change', toggleCancelReason);

        let returnProductId = null;
        let returnOrderId = null;

        document.querySelectorAll('.return-info-btn').forEach(button => {
            button.addEventListener('click', () => {
                const productName = button.getAttribute('data-product-name');
                const reason = button.getAttribute('data-reason');
                returnProductId = button.getAttribute('data-product-id');
                returnOrderId = button.getAttribute('data-order-id');

                document.getElementById('returnProductName').textContent = productName;
                document.getElementById('returnReason').textContent = reason;
            });
        });

        document.getElementById('approveReturnBtn').addEventListener('click', () => {
            updateReturnStatus('Approved');
        });

        document.getElementById('rejectReturnBtn').addEventListener('click', () => {
            updateReturnStatus('Rejected');
        });

        async function updateReturnStatus(action) {
            try {
                const response = await fetch(`/admin/refunds`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: returnOrderId,
                        productId: returnProductId,
                        status: action
                    })
                });

                const data = await response.json();
                if (response.ok) {
                    Swal.fire({
                        text: data.message,
                        icon: "success",
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        text: data.message,
                        icon: "warning",
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                }
            } catch (error) {
                console.error("Error approving/rejecting return:", error);
                Swal.fire({
                    text: error.message,
                    icon: "error",
                    timer: 2000,
                    showConfirmButton: false
                });
            }
        }
    </script>





    <!-- Bootstrap 5 JS and Bootstrap Icons -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <script>
        function toggleSidebar() {
            document.querySelector('.sidebar').classList.toggle('active');
        }
    </script>
</body>

</html>