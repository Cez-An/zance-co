<%-include("../../views/partials/user/header") %> 

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="/css/profile-section.css">  
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-SgOJa3DmI69IUzQ2PVdRZhwQ+dy64/BUtbMJw1MZ8t5HZApcHrRKUc4W0kG879m7" crossorigin="anonymous">

<style>
    body {
        margin: 0;
        font-family: Arial, sans-serif;
        background-color: #000000;
        color: #ffffff;
    }
	a {
        text-decoration: none;
        }
    .bottom-nav {
        width: 100%;
        height: 60px;
        background-color: #000000;
        position: fixed;
        bottom: 0;
        left: 0;
        display: flex;
        justify-content: space-around;
        align-items: center;
        padding: 0 10px;
        box-shadow: 0 -2px 5px rgba(0,0,0,0.5);
        z-index: 1000;
    }

    .bottom-nav a {
        flex-grow: 1;
        text-align: center;
        text-decoration: none;
        color: #ffffff;
        font-size: 14px;
        padding: 8px 0;
    }

    .bottom-nav a:hover,
    .bottom-nav a.active {
        background-color: #6510DC;
        border-radius: 8px;
    }

    .bottom-nav i {
        display: block;
        font-size: 18px;
        margin-bottom: 2px;
    }

    .content {
        padding: 20px;
        padding-bottom: 80px; /* Space for bottom nav */
        color: #ffffff;
    }
    </style>

</head>
<body>
    
        <main class="container mt-4">
            <div class="row g-5 d-flex justify-content-center">
    
    
                <!-- Add New Address Form -->
                <div class="col-md-9">
                    <div class="py-3 px-5 h-100" style="border-radius: 12px; background-color: #1a1a1a;">
                        <h4 class="mb-4" style="color: #ffffff;">Edit Address</h4>

                        <form id="editAddressForm">
                            <input type="hidden" name="addressId" id="addressId" value="<%= addressId %>">
                            <input type="hidden" name="index" id="index" value="<%= index %>">
    
                            <div class="form-group-pair">
                                <div class="mb-3">
                                    <label for="fullName" class="form-label required">Full Name</label>
                                    <input type="text" id="fullName" name="fullName" class="form-control form-control-sm" value="<%= address.name %>">
                                    <div id="fullNameError" style="font-size: 0.8em; color: #ff0101;"></div>
    
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label required">Phone Number</label>
                                    <input type="tel" id="phone" name="phone" class="form-control form-control-sm" value="<%= address.phone %>">
                                    <div id="phoneError" style="font-size: 0.8em; color: #ff0101;"></div>
                                </div>
                            </div>
                        
                            <div class="form-group-pair">
                                <div class="mb-3">
                                    <label for="addressLine1" class="form-label required">Address Line 1</label>
                                    <input type="text" id="addressLine1" name="addressLine1" class="form-control form-control-sm" value="<%= address.addressLine1 %>">
                                    <div id="addressLine1Error" style="font-size: 0.8em; color: #ff0101;"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="addressLine2" class="form-label">Address Line 2 (Optional)</label>
                                    <input type="text" id="addressLine2" name="addressLine2" class="form-control form-control-sm" 
                                           value="<%= address.addressLine2 %>">
                                </div>
                            </div>
                        
                            <div class="form-group-pair">
                                <div class="mb-3">
                                    <label for="landmark" class="form-label">Landmark (Optional)</label>
                                    <input type="text" id="landmark" name="landmark" class="form-control form-control-sm" value="<%= address.landmark %>">
                                </div>
                                <div class="mb-3">
                                    <label for="city" class="form-label required">City</label>
                                    <input type="text" id="city" name="city" class="form-control form-control-sm" value="<%= address.city %>">
                                    <div id="cityError" style="font-size: 0.8em; color: #ff0101;"></div>
                                </div>
                            </div>
                        
                            <div class="form-group-pair">
                                <div class="mb-5">
                                    <label for="state" class="form-label required">State</label>
                                    <select id="state" name="state" class="form-select form-control form-control-sm" required>
                                        <option value="" disabled>Select your state</option>
                                        <% 
                                            const states = [
                                                'Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh',
                                                'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jharkhand', 'Karnataka',
                                                'Kerala', 'Madhya Pradesh', 'Maharashtra', 'Manipur', 'Meghalaya',
                                                'Mizoram', 'Nagaland', 'Odisha', 'Punjab', 'Rajasthan', 'Sikkim',
                                                'Tamil Nadu', 'Telangana', 'Tripura', 'Uttar Pradesh', 'Uttarakhand', 'West Bengal'
                                            ];
                                        %>
                                        <% states.forEach(state => { %>
                                            <option value="<%= state %>" <%= address.state === state ? 'selected' : '' %>><%= state %></option>
                                        <% }) %>
                                    </select>
                                    <div id="stateError" style="font-size: 0.8em; color: #ff0101;"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="zipCode" class="form-label required">Zip Code</label>
                                    <input type="text" id="zipCode" name="zipCode" class="form-control form-control-sm" value="<%= address.pincode %>">
                                    <div id="zipCodeError" style="font-size: 0.8em; color: #ff0101;"></div>
    
                                </div>
                            </div>
                        
                            <div class="form-group-pair">
                                <div class="mb-5">
                                    <label for="country" class="form-label required">Country</label>
                                    <select id="country" name="country" class="form-select form-control form-control-sm">
                                        <option value="India" selected>India</option>
                                        <!-- Add more countries if needed -->
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="altNumber" class="form-label">Alternate Phone Number (Optional)</label>
                                    <input type="tel" id="altNumber" name="altNumber" class="form-control form-control-sm" 
                                           value="<%= address.altPhone %>">
                                           
                                </div>
                            </div>
                        
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <div class="d-flex gap-2 justify-content-between">
                                    <input type="hidden" name="pageFrom" id="pageFrom" value="<%= from %>">
                                    <button type="submit" class="btn" style="background-color: #6510DC; color: #ffffff;">Save Address</button>
                                    <button type="button" class="btn btn-secondary" onclick="window.history.back();">Cancel</button>
                                </div>
                                <div class="mb-3">
                                    <div class="d-flex gap-3">
                                        <input type="radio" id="home" name="addressType" value="home"
                                            <%= address.addressType === 'home' ? 'checked' : '' %>>
                                        <label for="home">Home</label>
                        
                                        <input type="radio" id="work" name="addressType" value="work"
                                            <%= address.addressType === 'work' ? 'checked' : '' %>>
                                        <label for="work">Work</label>
                                    </div>
                                    <div id="addressTypeError" style="font-size: 0.8em; color: #ff0101;"></div>
                                </div>
                            </div>
                        </form>
                        
                    </div>
                </div>
            </div>
        </main>

                <div class="bottom-nav">
          <a href="/user/order" >
            <i class="fas fa-shopping-cart"></i>
            <span>Orders</span>
          </a>
          <a href="/user/userProfile" >
            <i class="fas fa-user"></i>
            <span>Profile</span>
          </a>
          <a href="/user/address" class="active">
            <i class="fas fa-map-marker-alt"></i>
            <span>Addresses</span>
          </a>
          <a href="/user/privacy">
            <i class="fas fa-lock"></i>
            <span>Privacy</span>
          </a>
          <a href="/user/wallet">
            <i class="fas fa-wallet"></i>
            <span>Wallet</span>
          </a>
        </div>


<script>
    document.getElementById("editAddressForm").addEventListener('submit', async (event) => {
        event.preventDefault();

        const fields = {
            fullName: document.getElementById('fullName'),
            phone: document.getElementById('phone'),
            addressLine1: document.getElementById('addressLine1'),
            addressLine2: document.getElementById('addressLine2'),
            landmark: document.getElementById('landmark'),
            city: document.getElementById('city'),
            state: document.getElementById('state'),
            country: document.getElementById('country'),
            altNumber: document.getElementById('altNumber'),
            zipCode: document.getElementById('zipCode'),
            addressType: document.querySelector('input[name="addressType"]:checked'),
            index: document.getElementById('index'),
            from: document.getElementById('pageFrom')
        };

        const errorFields = {
            fullName: document.getElementById("fullNameError"),
            addressLine1: document.getElementById("addressLine1Error"),
            phone: document.getElementById("phoneError"),
            city: document.getElementById("cityError"),
            state: document.getElementById("stateError"),
            zipCode: document.getElementById("zipCodeError"),
            addressType: document.getElementById("addressTypeError"),
        };

        // Clear previous errors
        Object.values(errorFields).forEach(el => el.innerText = "");

        let hasError = false;
        const phonePattern = /^[6-9]\d{9}$/;

        const fullName = fields.fullName.value.trim();
        const namePattern = /^[A-Za-z]{2,}(?: [A-Za-z]{1,})*$/;
        
        if (!fullName) {
            errorFields.fullName.innerText = "Full name is required";
            hasError = true;
        } else if (!namePattern.test(fullName)) {
            errorFields.fullName.innerText = "Name must contain only letters and spaces, no symbols or numbers";
            hasError = true;
        }

        const addressLine1 = fields.addressLine1.value.trim();
        const addressLine1Pattern = /^(?!.*[^a-zA-Z0-9\s]).*[a-zA-Z]/;

        if (!addressLine1) {
            errorFields.addressLine1.innerText = "Address Line 1 is required";
            hasError = true;
        } else if (!addressLine1Pattern.test(addressLine1)) {
            errorFields.addressLine1.innerText = "Enter a valid address without only numbers, symbols, or blank spaces";
            hasError = true;
        }


        const phone = fields.phone.value.trim();
        if (!phone) {
            errorFields.phone.innerText = "Phone number is required";
            hasError = true;
        } else if (!phonePattern.test(phone) || /^(\d)\1{9}$/.test(phone)) {
            errorFields.phone.innerText = "Enter a valid 10-digit phone number (not all same digits)";
            hasError = true;
        }

        const altNumber = fields.altNumber.value.trim();
        if (altNumber && (!/^\d{10}$/.test(altNumber) || /^(\d)\1{9}$/.test(altNumber))) {
            errorFields.phone.innerText = "Alternate number must be a valid 10-digit number (not all same digits)";
            hasError = true;
        }

        const city = fields.city.value.trim();
        const cityPattern = /^[A-Za-z]+(?: [A-Za-z]+)*$/;
            
        if (!city) {
            errorFields.city.innerText = "City is required";
            hasError = true;
        } else if (!cityPattern.test(city)) {
            errorFields.city.innerText = "City must contain only letters and spaces (no numbers or symbols)";
            hasError = true;
        }
        

        const state = fields.state.value;
        if (!state || state === "Select your state") {
            errorFields.state.innerText = "Please select a state";
            hasError = true;
        }

        const zipCode = fields.zipCode.value.trim();
        if (!zipCode) {
            errorFields.zipCode.innerText = "Zip Code is required";
            hasError = true;
        } else if (!/^\d{5,6}$/.test(zipCode)) {
            errorFields.zipCode.innerText = "Zip Code must be 5 or 6 digits";
            hasError = true;
        }

        const addressType = fields.addressType?.value;
        if (!addressType) {
            errorFields.addressType.innerText = "Address type is required";
            hasError = true;
        }

        if (hasError) return;

        const formData = {
            fullName,
            phone,
            addressLine1,
            addressLine2: fields.addressLine2.value.trim(),
            landmark: fields.landmark.value.trim(),
            city,
            state,
            country: fields.country.value,
            altNumber,
            zipCode,
            addressType,
            index: fields.index.value,
            from: fields.from.value
        };

        try {
            const response = await fetch('/user/address', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.error || "Something went wrong");
            }

            Swal.fire({
                icon: "success",
                text: data.message,
                timer: 2000,
                showConfirmButton: false
            });

            setTimeout(() => {
                window.location.href = data.redirectUrl;
            }, 2000);

        } catch (error) {
            console.error(error);
            Swal.fire({
                icon: "error",
                text: "A frontend error occurred. Please try again.",
            });
        }
    });
</script>





    <script>
        window.addEventListener('load', function() {
            const loader = document.querySelector('.loader-wrapper');
            const content = document.querySelector('.content');
            setTimeout(function() {
                loader.classList.add('loader-hidden');
                content.classList.add('content-loaded');
            }, 1500);
        });
    </script>
    <!-- Js Plugins -->
    <script src="../../js/jquery-3.3.1.min.js"></script>
    <script src="../../js/bootstrap.min.js"></script>
    <script src="../../js/jquery.nice-select.min.js"></script>
    <script src="../../js/jquery.nicescroll.min.js"></script>
    <script src="../../js/jquery.magnific-popup.min.js"></script>
    <script src="../../js/jquery.countdown.min.js"></script>
    <script src="../../js/jquery.slicknav.js"></script>
    <script src="../../js/mixitup.min.js"></script>
    <script src="../../js/owl.carousel.min.js"></script>
    <script src="../../js/main.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js" integrity="sha384-k6d4wzSIapyDyv1kpU366/PK5hCdSbCRGRCMv+eplOQJWyd1fbcAu9OCUj5zNLiq" crossorigin="anonymous"></script>

</body>
</html>