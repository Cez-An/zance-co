<%- include("../../views/partials/user/header") %>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-SgOJa3DmI69IUzQ2PVdRZhwQ+dy64/BUtbMJw1MZ8t5HZApcHrRKUc4W0kG879m7" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        /* Order Summary */
        .order-summary {
            background: #343a40;
            border-radius: 12px;
            position: sticky;
            top: 20px;
        }

        .order-summary .btn-primary {
            background: linear-gradient(90deg, #6C5DD3, #8A7DE8);
            border: none;
            border-radius: 12px;
            padding: 12px;
            font-size: 1.1rem;
            transition: transform 0.2s ease;
        }

        .order-summary .btn-primary:hover {
            transform: scale(1.02);
        }

        .coupon-input .btn-outline-secondary {
            border-radius: 0 5px 5px 0;
            transition: background-color 0.2s ease;
        }

        .coupon-input .btn-outline-secondary:hover {
            background-color: #6C5DD3;
            color: #FFFFFF;
            border-color: #6C5DD3;
        }

        .nice-select .list {
            background-color: #000000;
        }

        .nice-select .option:hover,
        .nice-select .option.focus,
        .nice-select .option.selected.focus {
            background-color: #707070;
        }

        .nice-select {
            background-color: #585858;
        }

        a {
            text-decoration: none;
        }

        .text-muted {
            color: #6c757d !important;
        }

        body {
            background-color: #000000;
        }
    </style>

    <!-- Payment Section -->
    <main class="container my-5">

        <form id="paymentForm">

            <div class="container-fluid">
                <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-3 p-3 mx-0"
                    style="border-radius: 10px; background-color: #343a40;">

                    <!-- Title -->
                    <h4 class="fw-bold mb-2 mb-md-0 text-white text-center text-md-start">
                        Select Payment Method
                    </h4>

                    <!-- Progress Steps -->
                    <div
                        class="d-flex flex-wrap justify-content-center justify-content-md-end align-items-center gap-2">
                        <div class="progress-step active d-flex align-items-center">
                            <i class="fas fa-shopping-cart text-muted me-1" style="font-size: 1rem;"></i>
                            <span class="fw-medium text-muted" style="font-size: 0.9rem;">Cart</span>
                        </div>
                        <i class="fas fa-arrow-right text-muted"></i>
                        <div class="progress-step d-flex align-items-center">
                            <i class="fas fa-truck me-1 text-muted" style="font-size: 0.9rem;"></i>
                            <span class="text-muted" style="font-size: 0.8rem;">Shipping</span>
                        </div>
                        <i class="fas fa-arrow-right text-muted"></i>
                        <div class="progress-step d-flex align-items-center">
                            <i class="fas fa-credit-card me-1 text-white" style="font-size: 0.9rem;"></i>
                            <span class="text-white" style="font-size: 0.8rem;">Payments</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row g-4">

                <!-- Payment Methods -->
                <div class="col-md-12 col-lg-8">

                    <!-- Cash on Delivery -->
                    <div class="card p-3 mb-3 border-0 shadow-sm" style="background-color: #eae2fc;">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" value="cod" id="cod">
                            <label class="form-check-label w-100" for="cod">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-money-bill-wave me-3" style="font-size: 24px;"></i>
                                    <div>
                                        <strong>Cash on Delivery</strong>
                                    </div>
                                </div>
                            </label>
                        </div>
                    </div>
                    <div class="card p-3 mb-3 border-0 shadow-sm" style="background-color: #eae2fc;">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" value="razorpay"
                                id="razorpay">
                            <label class="form-check-label w-100" for="razorpay">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-credit-card me-3" style="font-size: 24px;"></i>
                                    <div>
                                        <strong>RazorPay</strong>
                                    </div>
                                </div>
                            </label>
                        </div>
                    </div>


                    <div class="card p-3 mb-3 border-0 shadow-sm" style="background-color: #eae2fc;">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" value="wallet"
                                id="wallet">
                            <label class="form-check-label w-100" for="wallet">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-money-bill-wave me-3" style="font-size: 24px;"></i>
                                    <div>
                                        <strong>Wallet</strong>
                                    </div>
                                </div>
                            </label>
                        </div>
                    </div>
                </div>
                <!-- Price Summary -->
                <div class="col-md-12 col-lg-4">
                    <div class="card p-3 shadow-sm border-0 order-summary mb-3">
                        <h5 class="fw-bold text-white mb-4">Price Details</h5>

                        <% if (cart && cart.items && cart.items.length> 0) { %>
                            <% cart.items.forEach(item=> { %>
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <span class="text-white text-truncate"
                                        style="font-size: 0.95rem; max-width: 70%; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                                        <%= item.quantity %>x <%= item.productId.name %>
                                    </span>
                                    <span class="text-white fw-medium flex-shrink-0">
                                        ₹ <%= (item.quantity * item.productId.salePrice).toLocaleString('en-IN') %>
                                    </span>
                                </div>
                                <% }) %>
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <span class="text-white" style="font-size: 0.95rem;">Delivery Charges</span>
                                        <span
                                            class="<%= deliveryCharge ? 'text-danger' : 'text-success' %> flex-shrink-0">
                                            <%= deliveryCharge ? `₹ ${deliveryCharge}` : 'Free' %>
                                        </span>
                                    </div>

                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <span class="text-white" style="font-size: 0.95rem;">Coupon Discount</span>
                                        <span class="text-success fw-semibold flex-shrink-0">₹ <%= couponDiscount %>
                                                </span>
                                        <input type="hidden" id="couponDiscount" name="couponDiscount"
                                            value="<%= couponDiscount %>">
                                        <input type="hidden" id="couponId" name="couponId" value="<%= couponId %>">
                                    </div>
                                    <hr class="my-2" style="border-color: #E0E0E0;">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="fw-bold text-white" style="font-size: 1.2rem;">Grand Total</span>
                                        <span id="grandTotal" class="fw-bold text-white flex-shrink-0"
                                            style="font-size: 1.2rem;" data-amount="<%= grandTotal %>">
                                            ₹ <%= grandTotal.toLocaleString('en-IN') %>
                                        </span>
                                    </div>
                                    <!-- Combined submit button -->
                                    <button type="submit" class="btn btn-primary w-100 mt-4">Place Order</button>
                                    <% } else { %>
                                        <p class="text-white text-center fs-5">No items in your cart.</p>
                                        <% } %>
                    </div>
                </div>
            </div>
        </form>

    </main>
    <br><br>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        document.getElementById('paymentForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const paymentMethodEl = document.querySelector('input[name="paymentMethod"]:checked');
            if (!paymentMethodEl) {
                Swal.fire({
                    text: 'Please select a payment method',
                    icon: 'warning',
                    timer: 2000,
                    showConfirmButton: false
                });
                return;
            }

            const paymentMethod = paymentMethodEl.value;

            if (paymentMethod === 'cod') {
                // Handle COD payment
                try {
                    const response = await fetch('/payments', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ paymentMethod: paymentMethod })
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        Swal.fire({
                            text: data.error,
                            icon: "warning",
                            timer: 2000,
                            showConfirmButton: false
                        });
                    } else {
                        Swal.fire({
                            icon: 'success',
                            text: data.message,
                            showConfirmButton: true,
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/payments/confirmOrder';
                            }
                        });
                    }
                } catch (error) {
                    console.error(error);
                    Swal.fire({
                        text: 'Something went wrong, please try again',
                        icon: "error",
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            } else if (paymentMethod === 'razorpay') {
                // Create Razorpay order first
                try {
                    const orderResponse = await fetch('/payments/create-razorpay-order', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ paymentMethod: 'razorpay' })
                    });

                    if (!orderResponse.ok) {
                        const errorData = await orderResponse.json();
                        throw new Error(errorData.error || 'Failed to create order');
                    }

                    const orderData = await orderResponse.json();

                    // Configure Razorpay options
                    const options = {
                        key: "<%= RAZOR_API_KEY %>",
                        amount: orderData.amount,
                        currency: orderData.currency,
                        name: "zance&Co",
                        description: "Payment for your order",
                        order_id: orderData.orderId,
                        handler: async function (response) {
                            // Send payment details to server
                            try {
                                const paymentVerifyResponse = await fetch('/payments', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        paymentMethod: 'razorpay',
                                        razorpay_payment_id: response.razorpay_payment_id,
                                        razorpay_order_id: response.razorpay_order_id,
                                        razorpay_signature: response.razorpay_signature
                                    })
                                });

                                const verifyData = await paymentVerifyResponse.json();

                                if (!paymentVerifyResponse.ok) {
                                    throw new Error(verifyData.error || 'Payment verification failed');
                                }

                                Swal.fire({
                                    icon: 'success',
                                    text: verifyData.message,
                                    showConfirmButton: true,
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.href = '/payments/confirmOrder';
                                    }
                                });
                            } catch (error) {
                                console.error('Payment verification error:', error);
                                Swal.fire({
                                    text: error.message || 'Payment verification failed',
                                    icon: "error",
                                    timer: 3000,
                                    showConfirmButton: true
                                });
                            }
                        },
                        prefill: {
                            name: "<%= user.name %>",
                            email: "<%= user.email %>",
                            contact: "<%= user.phone || '' %>"
                        },
                        theme: {
                            color: "#6C5DD3"
                        },
                        modal: {
                            ondismiss: function () {
                                console.log('Payment cancelled');
                            }
                        }
                    };

                    // Initialize Razorpay
                    const razorpay = new Razorpay(options);
                    razorpay.on('payment.failed', function (response) {
                        fetch('/payments/payment-failed', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                error: response.error
                            })
                        });

                        Swal.fire({
                            text: "Payment failed! " + response.error.description,
                            icon: "error",
                            showConfirmButton: true
                        });
                    });


                    razorpay.open();

                } catch (error) {
                    console.error('Error initiating Razorpay payment:', error);
                    Swal.fire({
                        text: error.message || 'Failed to initiate payment',
                        icon: "error",
                        timer: 1000,
                        showConfirmButton: true
                    });
                }
            } else if (paymentMethod === 'wallet') {
                try {
                    const response = await fetch('/payments', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ paymentMethod: 'wallet' })
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        Swal.fire({
                            text: data.error || 'Wallet transaction failed',
                            icon: "warning",
                            timer: 2000,
                            showConfirmButton: false
                        });
                    } else {
                        Swal.fire({
                            icon: 'success',
                            text: data.message || 'Order placed using wallet successfully',
                            showConfirmButton: true,
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/payments/confirmOrder';
                            }
                        });
                    }
                } catch (error) {
                    console.error(error);
                    Swal.fire({
                        text: 'Something went wrong, please try again',
                        icon: "error",
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            }

        });
    </script>

    </body>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-k6d4wzSIapyDyv1kpU366/PK5hCdSbCRGRCMv+eplOQJWyd1fbcAu9OCUj5zNLiq"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <%- include("../../views/partials/user/footer") %>